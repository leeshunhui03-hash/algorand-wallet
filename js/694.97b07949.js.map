{"version":3,"file":"js/694.97b07949.js","mappings":"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","sources":["webpack://wallet/./src/components/SelectAsset.vue?06a9","webpack://wallet/./src/components/SelectAsset.vue","webpack://wallet/./src/components/SelectAsset.vue?c28d","webpack://wallet/./node_modules/yaml/browser/dist/nodes/identity.js","webpack://wallet/./node_modules/yaml/browser/dist/visit.js","webpack://wallet/./node_modules/yaml/browser/dist/doc/directives.js","webpack://wallet/./node_modules/yaml/browser/dist/doc/anchors.js","webpack://wallet/./node_modules/yaml/browser/dist/doc/applyReviver.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/toJS.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/Node.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/Alias.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/Scalar.js","webpack://wallet/./node_modules/yaml/browser/dist/doc/createNode.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/Collection.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyComment.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/foldFlowLines.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyString.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringify.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyPair.js","webpack://wallet/./node_modules/yaml/browser/dist/log.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/Pair.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyCollection.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/YAMLMap.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/common/map.js","webpack://wallet/./node_modules/yaml/browser/dist/nodes/YAMLSeq.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/common/seq.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/common/string.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/common/null.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/core/bool.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyNumber.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/core/float.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/core/int.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/core/schema.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/json/schema.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/tags.js","webpack://wallet/./node_modules/yaml/browser/dist/schema/Schema.js","webpack://wallet/./node_modules/yaml/browser/dist/stringify/stringifyDocument.js","webpack://wallet/./node_modules/yaml/browser/dist/doc/Document.js","webpack://wallet/./node_modules/yaml/browser/dist/errors.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-props.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/util-contains-newline.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/util-map-includes.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-block-map.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-block-seq.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-end.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/compose-collection.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/compose-scalar.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/compose-node.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/compose-doc.js","webpack://wallet/./node_modules/yaml/browser/dist/compose/composer.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/cst-scalar.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/cst-stringify.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/cst-visit.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/cst.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/lexer.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/line-counter.js","webpack://wallet/./node_modules/yaml/browser/dist/parse/parser.js","webpack://wallet/./node_modules/yaml/browser/dist/public-api.js","webpack://wallet/./node_modules/yaml/browser/index.js","webpack://wallet/./src/pages/Account/ScheduledPayments.vue?ed72","webpack://wallet/./src/pages/Account/ScheduledPayments.vue","webpack://wallet/./src/pages/Account/ScheduledPayments.vue?8cbe"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { computed, onMounted, reactive, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Dropdown from \"primevue/dropdown\";\nimport { useI18n } from \"vue-i18n\";\nimport formatCurrency from \"../scripts/numbers/formatCurrency\";\nimport CAsset from \"../scripts/interface/CAsset\";\nimport IAsset from \"../scripts/interface/IAsset\";\nimport IARC200 from \"../scripts/interface/IARC200\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'SelectAsset',\n  props: {\n  modelValue: CAsset,\n  itemId: String,\n  class: String,\n  account: String,\n},\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emit = __emit;\n\nconst model = computed({\n  get() {\n    return props.modelValue;\n  },\n\n  set(value) {\n    return emit(\"update:modelValue\", value);\n  },\n});\n\nconst store = useStore();\nconst { t } = useI18n();\n\nfunction getAccountName() {\n  const ret = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == props.modelValue\n  );\n  if (!ret) return props.modelValue;\n  return `${ret.name}: ${props.modelValue}`;\n}\nconst state = reactive({\n  assetId: \"\",\n  assets: [] as IAsset[],\n  accountData: {} as any,\n});\n\nwatch(\n  () => state.assetId,\n  (newAssetId) => {\n    const value = state.assets.find(\n      (a) => Number(a[\"asset-id\"]) == Number(newAssetId)\n    );\n    if (value) {\n      var ret = new CAsset();\n      ret.amount = value.amount;\n      ret[\"asset-id\"] = value[\"asset-id\"];\n      ret.decimals = value.decimals;\n      ret.label = value.label;\n      ret.name = value.name;\n      ret.type = value.type;\n      ret[\"unit-name\"] = value[\"unit-name\"];\n\n      emit(\"update:modelValue\", ret);\n    }\n  }\n);\n\nconst makeAccountData = () => {\n  const account = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == props.account\n  );\n  if (!account) return false;\n  if (!account.data) return false;\n  return account.data[store.state.config.env];\n};\n\nconst makeAssets = async () => {\n  const assets: IAsset[] = [];\n  state.accountData = makeAccountData();\n  if (state.accountData) {\n    const balance = formatCurrency(\n      state.accountData.amount,\n      store.state.config.tokenSymbol,\n      6\n    );\n    assets.push({\n      \"asset-id\": 0,\n      amount: state.accountData.amount,\n      name: store.state.config.tokenSymbol,\n      decimals: 6,\n      \"unit-name\": store.state.config.tokenSymbol,\n      type: \"Native\",\n      label: `${store.state.config.tokenSymbol} (Native token) Balance: ${balance}`,\n    });\n  } else {\n    const balance = formatCurrency(0, store.state.config.tokenSymbol, 6);\n    assets.push({\n      \"asset-id\": 0,\n      amount: 0,\n      name: store.state.config.tokenSymbol,\n      decimals: 6,\n      \"unit-name\": store.state.config.tokenSymbol,\n      type: \"Native\",\n      label: `${store.state.config.tokenSymbol} (Native token) Balance: ${balance}`,\n    });\n  }\n  if (state.accountData) {\n    for (let index in state.accountData.assets) {\n      const asset = await store.dispatch(\"indexer/getAsset\", {\n        assetIndex: state.accountData.assets[index][\"asset-id\"],\n      });\n      if (asset) {\n        const balance = formatCurrency(\n          state.accountData.assets[index][\"amount\"],\n          asset[\"unit-name\"] ? asset[\"unit-name\"] : asset[\"name\"],\n          asset[\"decimals\"]\n        );\n        assets.push({\n          \"asset-id\": state.accountData.assets[index][\"asset-id\"],\n          amount: state.accountData.assets[index][\"amount\"],\n          name: asset[\"name\"],\n          decimals: asset[\"decimals\"],\n          \"unit-name\": asset[\"unit-name\"],\n          type: \"ASA\",\n          label: `${asset[\"name\"]} (ASA ${state.accountData.assets[index][\"asset-id\"]}) Balance: ${balance}`,\n        });\n      } else {\n        console.error(\n          \"Asset not loaded\",\n          state.accountData.assets[index][\"asset-id\"]\n        );\n      }\n    }\n\n    if (state.accountData.arc200) {\n      for (const accountAsset of Object.values(state.accountData.arc200)) {\n        const arc200 = accountAsset as IARC200;\n        const balance = formatCurrency(\n          arc200.balance,\n          arc200.symbol ? arc200.symbol : arc200.name,\n          Number(arc200.decimals)\n        );\n        assets.push({\n          \"asset-id\": Number(arc200.arc200id),\n          amount: Number(arc200.balance),\n          name: arc200.name,\n          decimals: Number(arc200.decimals),\n          \"unit-name\": arc200.symbol,\n          type: \"ARC200\",\n          label: `${arc200.name} (ARC200 ${arc200.arc200id}) Balance: ${balance}`,\n        });\n      }\n    }\n    state.assets = assets;\n  }\n};\n\nonMounted(async () => {\n  await makeAssets();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(Dropdown), {\n    inputId: \"asset\",\n    itemid: props.itemId,\n    modelValue: state.assetId,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((state.assetId) = $event)),\n    filter: \"\",\n    options: state.assets,\n    optionLabel: \"label\",\n    optionValue: \"asset-id\",\n    placeholder: _ctx.$t('pay.asset'),\n    class: \"w-full\",\n    inputClass: \"w-full\"\n  }, null, 8, [\"itemid\", \"modelValue\", \"options\", \"placeholder\"]))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { computed, onMounted, reactive, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Dropdown from \"primevue/dropdown\";\nimport { useI18n } from \"vue-i18n\";\nimport formatCurrency from \"../scripts/numbers/formatCurrency\";\nimport CAsset from \"../scripts/interface/CAsset\";\nimport IAsset from \"../scripts/interface/IAsset\";\nimport IARC200 from \"../scripts/interface/IARC200\";\n\nconst props = defineProps({\n  modelValue: CAsset,\n  itemId: String,\n  class: String,\n  account: String,\n});\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst model = computed({\n  get() {\n    return props.modelValue;\n  },\n\n  set(value) {\n    return emit(\"update:modelValue\", value);\n  },\n});\n\nconst store = useStore();\nconst { t } = useI18n();\n\nfunction getAccountName() {\n  const ret = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == props.modelValue\n  );\n  if (!ret) return props.modelValue;\n  return `${ret.name}: ${props.modelValue}`;\n}\nconst state = reactive({\n  assetId: \"\",\n  assets: [] as IAsset[],\n  accountData: {} as any,\n});\n\nwatch(\n  () => state.assetId,\n  (newAssetId) => {\n    const value = state.assets.find(\n      (a) => Number(a[\"asset-id\"]) == Number(newAssetId)\n    );\n    if (value) {\n      var ret = new CAsset();\n      ret.amount = value.amount;\n      ret[\"asset-id\"] = value[\"asset-id\"];\n      ret.decimals = value.decimals;\n      ret.label = value.label;\n      ret.name = value.name;\n      ret.type = value.type;\n      ret[\"unit-name\"] = value[\"unit-name\"];\n\n      emit(\"update:modelValue\", ret);\n    }\n  }\n);\n\nconst makeAccountData = () => {\n  const account = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == props.account\n  );\n  if (!account) return false;\n  if (!account.data) return false;\n  return account.data[store.state.config.env];\n};\n\nconst makeAssets = async () => {\n  const assets: IAsset[] = [];\n  state.accountData = makeAccountData();\n  if (state.accountData) {\n    const balance = formatCurrency(\n      state.accountData.amount,\n      store.state.config.tokenSymbol,\n      6\n    );\n    assets.push({\n      \"asset-id\": 0,\n      amount: state.accountData.amount,\n      name: store.state.config.tokenSymbol,\n      decimals: 6,\n      \"unit-name\": store.state.config.tokenSymbol,\n      type: \"Native\",\n      label: `${store.state.config.tokenSymbol} (Native token) Balance: ${balance}`,\n    });\n  } else {\n    const balance = formatCurrency(0, store.state.config.tokenSymbol, 6);\n    assets.push({\n      \"asset-id\": 0,\n      amount: 0,\n      name: store.state.config.tokenSymbol,\n      decimals: 6,\n      \"unit-name\": store.state.config.tokenSymbol,\n      type: \"Native\",\n      label: `${store.state.config.tokenSymbol} (Native token) Balance: ${balance}`,\n    });\n  }\n  if (state.accountData) {\n    for (let index in state.accountData.assets) {\n      const asset = await store.dispatch(\"indexer/getAsset\", {\n        assetIndex: state.accountData.assets[index][\"asset-id\"],\n      });\n      if (asset) {\n        const balance = formatCurrency(\n          state.accountData.assets[index][\"amount\"],\n          asset[\"unit-name\"] ? asset[\"unit-name\"] : asset[\"name\"],\n          asset[\"decimals\"]\n        );\n        assets.push({\n          \"asset-id\": state.accountData.assets[index][\"asset-id\"],\n          amount: state.accountData.assets[index][\"amount\"],\n          name: asset[\"name\"],\n          decimals: asset[\"decimals\"],\n          \"unit-name\": asset[\"unit-name\"],\n          type: \"ASA\",\n          label: `${asset[\"name\"]} (ASA ${state.accountData.assets[index][\"asset-id\"]}) Balance: ${balance}`,\n        });\n      } else {\n        console.error(\n          \"Asset not loaded\",\n          state.accountData.assets[index][\"asset-id\"]\n        );\n      }\n    }\n\n    if (state.accountData.arc200) {\n      for (const accountAsset of Object.values(state.accountData.arc200)) {\n        const arc200 = accountAsset as IARC200;\n        const balance = formatCurrency(\n          arc200.balance,\n          arc200.symbol ? arc200.symbol : arc200.name,\n          Number(arc200.decimals)\n        );\n        assets.push({\n          \"asset-id\": Number(arc200.arc200id),\n          amount: Number(arc200.balance),\n          name: arc200.name,\n          decimals: Number(arc200.decimals),\n          \"unit-name\": arc200.symbol,\n          type: \"ARC200\",\n          label: `${arc200.name} (ARC200 ${arc200.arc200id}) Balance: ${balance}`,\n        });\n      }\n    }\n    state.assets = assets;\n  }\n};\n\nonMounted(async () => {\n  await makeAssets();\n});\n</script>\n<template>\n  <Dropdown\n    inputId=\"asset\"\n    :itemid=\"props.itemId\"\n    v-model=\"state.assetId\"\n    filter\n    :options=\"state.assets\"\n    optionLabel=\"label\"\n    optionValue=\"asset-id\"\n    :placeholder=\"$t('pay.asset')\"\n    class=\"w-full\"\n    inputClass=\"w-full\"\n  >\n  </Dropdown>\n</template>\n","import script from \"./SelectAsset.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SelectAsset.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atMapIndent && bv.type !== 'block-seq') {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"field grid\" }\nconst _hoisted_2 = { class: \"col-12 mb-2 md:col-2 md:mb-0\" }\nconst _hoisted_3 = { class: \"col-12 md:col-10\" }\nconst _hoisted_4 = { class: \"field grid\" }\nconst _hoisted_5 = { class: \"col-12 mb-2 md:col-2 md:mb-0\" }\nconst _hoisted_6 = { class: \"col-12 md:col-10\" }\nconst _hoisted_7 = { class: \"field grid\" }\nconst _hoisted_8 = {\n  class: \"col-12 mb-2 md:col-2 md:mb-0\",\n  for: \"asset\"\n}\nconst _hoisted_9 = { class: \"col-12 md:col-10\" }\nconst _hoisted_10 = { class: \"field grid\" }\nconst _hoisted_11 = {\n  for: \"payamount\",\n  class: \"col-12 mb-2 md:col-2 md:mb-0\"\n}\nconst _hoisted_12 = { class: \"col-12 md:col-10\" }\nconst _hoisted_13 = { class: \"field grid\" }\nconst _hoisted_14 = { class: \"col-12 md:col-10\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"grid\"\n}\nconst _hoisted_16 = { class: \"col\" }\nconst _hoisted_17 = { class: \"p-input-icon-left\" }\n\nimport MainLayout from \"../../layouts/Main.vue\";\nimport { useStore } from \"vuex\";\nimport { onMounted, reactive, watch } from \"vue\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport SelectAccount from \"../../components/SelectAccount.vue\";\nimport SelectAsset from \"../../components/SelectAsset.vue\";\nimport DropDown from \"primevue/dropdown\";\nimport CAsset from \"@/scripts/interface/CAsset\";\nimport base642base64url from \"@/scripts/encoding/base642base64url\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport AlgorandAddress from \"@/components/AlgorandAddress.vue\";\nimport formatCurrency from \"@/scripts/numbers/formatCurrency\";\n\nimport YAML from \"yaml\";\nimport {\n  BiatecTaskManagerClient,\n  getPoolManagerApp,\n  getBoxReferenceUser,\n  getBoxReferenceApp,\n  parseBoxData,\n} from \"biatec-scheduler\";\nimport algosdk from \"algosdk\";\nimport axios from \"axios\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ScheduledPayments',\n  setup(__props) {\n\nconst route = useRoute();\nconst store = useStore();\nconst router = useRouter();\nconst state = reactive({\n  selection: {},\n  payTo: \"\",\n  assetData: new CAsset(),\n  account: route.params.account as string,\n  amount: 0,\n  maxAmount: 0,\n  stepAmount: 1,\n  apps: [],\n  filters: {\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  },\n  period: \"86400\",\n  optionsSchedule: [\n    {\n      value: \"60\",\n      name: \"Run each minute\",\n    },\n    {\n      value: \"3600\",\n      name: \"Run each hour\",\n    },\n    {\n      value: \"86400\",\n      name: \"Run each day\",\n    },\n  ],\n  start: Math.round(new Date().getTime() / 1000),\n  txID: \"\",\n  action: \"\",\n  hash: \"\",\n  client: \"\",\n  appId: \"\",\n  fee: 1000,\n  feeAssetId: 0,\n  feeAssetData: new CAsset(),\n  deploying: false,\n});\n\nconst getAccountData = () => {\n  const account = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == state.account\n  );\n  if (!account) return false;\n  if (!account.data) return false;\n  return account.data[store.state.config.env];\n};\nconst maxAmount = () => {\n  const accountData = getAccountData();\n  if (!state.assetData) return 0;\n  if (state.assetData.type == \"ARC200\") {\n    if (!state.assetData) return 0;\n    return state.assetData.amount / 10 ** state.assetData.decimals;\n  } else if (state.assetData.type == \"ASA\") {\n    if (!state.assetData) return 0;\n    return state.assetData.amount / 10 ** state.assetData.decimals;\n  } else {\n    let ret = accountData.amount / 1000000 - 0.1;\n    if (accountData[\"assets\"] && accountData[\"assets\"].length > 0)\n      ret = ret - accountData[\"assets\"].length * 0.1;\n    return ret;\n  }\n};\nconst stepAmount = () => {\n  if (!state.assetData.decimals) return 1;\n  const ret = Math.pow(10, -1 * state.assetData.decimals);\n  return ret;\n};\nconst setMaxAmount = () => {\n  state.amount = maxAmount();\n};\nwatch(\n  () => state.assetData,\n  async () => {\n    state.maxAmount = maxAmount();\n    state.stepAmount = stepAmount();\n    await store.dispatch(\"wallet/prolong\");\n  },\n  { deep: true }\n);\n\nconst loadTableData = async () => {\n  try {\n    const algod = (await store.dispatch(\"algod/getAlgod\")) as algosdk.Algodv2;\n    const indexer = (await store.dispatch(\n      \"indexer/getIndexer\"\n    )) as algosdk.Indexer;\n    // var client = new BiatecTaskManagerClient(\n    //   {\n    //     resolveBy: \"id\",\n    //     id: getPoolManagerApp(store.state.config.env),\n    //   },\n    //   algod\n    // );\n    const poolAppId = getPoolManagerApp(store.state.config.env);\n    const poolApp = await algod.getApplicationByID(poolAppId).do();\n    const fa = poolApp.params[\"global-state\"].find((kv) => kv.key == \"ZmE=\")\n      .value.uint;\n    state.feeAssetId = fa;\n    state.feeAssetData = await store.dispatch(\"indexer/getAsset\", {\n      assetIndex: fa,\n    });\n\n    const addr = route.params.account as string;\n    const decodedAddr = algosdk.decodeAddress(addr);\n    const box = await algod\n      .getApplicationBoxByName(\n        poolAppId,\n        getBoxReferenceUser(poolAppId, decodedAddr).name\n      )\n      .do();\n    const apps = [];\n    for (let pos = 2; pos < box.value.length; pos = pos + 8) {\n      const appIdUint = box.value.subarray(pos, pos + 8);\n      const appId = algosdk.decodeUint64(appIdUint, \"safe\");\n      const boxApp = await algod\n        .getApplicationBoxByName(\n          poolAppId,\n          getBoxReferenceApp(poolAppId, appId).name\n        )\n        .do();\n      const data = parseBoxData(boxApp.value);\n\n      const app = await algod.getApplicationByID(appId).do();\n      const s = app.params[\"global-state\"].find((kv) => kv.key == \"cw==\").value\n        .uint;\n      const p = app.params[\"global-state\"].find((kv) => kv.key == \"cA==\").value\n        .uint;\n      apps.push({\n        appId: appId,\n        appAddress: algosdk.getApplicationAddress(appId),\n        start: s,\n        period: p,\n        balanceFee: data.funds,\n        fee: data.fee,\n      });\n    }\n    state.apps = apps;\n\n    // const box = await indexer\n    //   .lookupApplicationBoxByIDandName(\n    //     poolAppId,\n    //     getBoxReferenceUser(poolAppId, decodedAddr).name\n    //   )\n    //   .do();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst deployApp = async () => {\n  try {\n    state.deploying = true;\n    const doc = {\n      schedule: {\n        period: state.period,\n        start: state.start,\n        fee: 1000,\n        app: 0,\n      },\n      tasks: [\n        {\n          task: \"pay@v1\",\n          displayName: `Pay to '${state.payTo}' ${state.amount} of token ${state.assetData[\"asset-id\"]}`,\n          inputs: {\n            receiver: `'${state.payTo}'`,\n            amount: Math.round(state.amount * 10 ** state.assetData.decimals),\n            token: state.assetData[\"asset-id\"],\n          },\n        },\n      ],\n    };\n    const docYaml = YAML.stringify(doc);\n    const postRet = await axios.post(\n      \"https://api-scheduler.biatec.io/v1/build/0\",\n      docYaml,\n      {\n        headers: {\n          \"Content-Type\": \"application/yaml\",\n        },\n      }\n    );\n\n    if (postRet.data.status !== \"success\") {\n      throw Error(\"Build has failed\");\n    }\n    state.hash = postRet.data.hash;\n    state.client = postRet.data.client;\n\n    const txsRequest = await axios.get(\n      `https://api-scheduler.biatec.io/v1/tx-create/${state.hash}/${store.state.config.env}/${route.params.account}/${state.client}`\n    );\n\n    const txs = txsRequest.data.map((t: string) => {\n      return algosdk.decodeUnsignedTransaction(\n        Buffer.from(t, \"base64\")\n      ) as algosdk.Transaction;\n    });\n\n    await store.dispatch(\"signer/returnTo\", \"ScheduledPayments\");\n    await store.dispatch(\"signer/toSign\", { tx: txs[0] });\n    const encoded = base642base64url(\n      Buffer.from(algosdk.encodeUnsignedTransaction(txs[0])).toString(\"base64\")\n    );\n\n    state.deploying = false;\n    state.txID = (txs[0] as algosdk.Transaction).txID();\n    state.action = \"tx-deploy\";\n    localStorage.setItem(\"currentAction\", JSON.stringify(state));\n    router.push(`/sign/${route.params.account}/${encoded}`);\n  } catch (e) {\n    state.deploying = false;\n    console.error(e);\n  }\n};\n\nconst continueTxDeploy = async () => {\n  try {\n    const algod = (await store.dispatch(\"algod/getAlgod\")) as algosdk.Algodv2;\n    const info = await algosdk.waitForConfirmation(algod, state.txID, 1);\n    state.appId = info[\"application-index\"];\n\n    const txsRequest = await axios.post(\n      `https://api-scheduler.biatec.io/v1/tx/${state.hash}/${store.state.config.env}/${route.params.account}/${state.appId}/bootstrap/${state.client}`,\n      {\n        period: Number(state.period),\n        start: Number(state.start),\n        fee: Number(state.fee),\n      }\n    );\n\n    state.action = \"tx-configure\";\n    localStorage.setItem(\"currentAction\", JSON.stringify(state));\n\n    const txs = txsRequest.data.map((t: string) => {\n      return algosdk.decodeUnsignedTransaction(\n        Buffer.from(t, \"base64\")\n      ) as algosdk.Transaction;\n    });\n\n    await store.dispatch(\"signer/returnToSignAll\", \"ScheduledPayments\");\n    await store.dispatch(\"signer/toSignArray\", { txs: txs });\n\n    await router.push(\"/signAll\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nonMounted(async () => {\n  await store.dispatch(\"wallet/prolong\");\n  await loadTableData();\n  try {\n    const deserialized = JSON.parse(\n      localStorage.getItem(\"currentAction\") ?? \"\"\n    );\n    if (deserialized.selection) {\n      state.selection = deserialized.selection;\n    }\n    if (deserialized.payTo) {\n      state.payTo = deserialized.payTo;\n    }\n    if (deserialized.assetData) {\n      var newAssetData = new CAsset();\n      newAssetData.amount = deserialized.assetData.amount;\n      newAssetData[\"asset-id\"] = deserialized.assetData[\"asset-id\"];\n      newAssetData.decimals = deserialized.assetData.decimals;\n      newAssetData.label = deserialized.assetData.label;\n      newAssetData.name = deserialized.assetData.name;\n      newAssetData.type = deserialized.assetData.type;\n      newAssetData[\"unit-name\"] = deserialized.assetData[\"unit-name\"];\n      state.assetData = newAssetData;\n    }\n    if (deserialized.account) {\n      state.account = deserialized.account;\n    }\n    if (deserialized.amount) {\n      state.amount = deserialized.amount;\n    }\n    if (deserialized.period) {\n      state.period = deserialized.period;\n    }\n    if (deserialized.txID) {\n      state.txID = deserialized.txID;\n    }\n    if (deserialized.action) {\n      state.action = deserialized.action;\n    }\n    if (deserialized.hash) {\n      state.hash = deserialized.hash;\n    }\n    if (deserialized.client) {\n      state.client = deserialized.client;\n    }\n    if (deserialized.start) {\n      state.start = deserialized.start;\n    }\n    if (deserialized.fee) {\n      state.fee = deserialized.fee;\n    }\n  } catch (exc: any) {\n    console.error(exc.message ?? exc);\n  }\n\n  if (state.action === \"tx-deploy\") {\n    continueTxDeploy();\n  }\n});\nwatch(\n  () => state.selection,\n  () => {\n    router.push({\n      name: \"scheduled-payment-with-appid\",\n      params: {\n        account: route.params.account,\n        appId: state.selection.appId,\n      },\n    });\n  }\n);\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_InputNumber = _resolveComponent(\"InputNumber\")!\n  const _component_InputGroupAddon = _resolveComponent(\"InputGroupAddon\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_InputGroup = _resolveComponent(\"InputGroup\")!\n  const _component_ProgressSpinner = _resolveComponent(\"ProgressSpinner\")!\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n  const _component_Card = _resolveComponent(\"Card\")!\n\n  return (_openBlock(), _createBlock(MainLayout, null, {\n    default: _withCtx(() => [\n      _createElementVNode(\"h1\", null, _toDisplayString(_ctx.$t(\"scheduled_payments.title\")), 1),\n      _createVNode(_component_Card, null, {\n        content: _withCtx(() => [\n          _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"scheduled_payments.description\")), 1),\n          _createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t(\"scheduled_payments.new_scheduled_payment\")), 1),\n          _createElementVNode(\"div\", _hoisted_1, [\n            _createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"scheduled_payments.period\")), 1),\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createVNode(_unref(DropDown), {\n                modelValue: state.period,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((state.period) = $event)),\n                \"option-label\": \"name\",\n                \"option-value\": \"value\",\n                options: state.optionsSchedule,\n                class: \"w-full\"\n              }, null, 8, [\"modelValue\", \"options\"])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"label\", _hoisted_5, _toDisplayString(_ctx.$t(\"scheduled_payments.pay_to\")), 1),\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createVNode(SelectAccount, {\n                modelValue: state.payTo,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((state.payTo) = $event)),\n                class: \"w-full\"\n              }, null, 8, [\"modelValue\"])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"label\", _hoisted_8, _toDisplayString(_ctx.$t(\"scheduled_payments.send_asset\")), 1),\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(SelectAsset, {\n                itemId: \"asset\",\n                modelValue: state.assetData,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((state.assetData) = $event)),\n                class: \"w-full\",\n                account: state.account\n              }, null, 8, [\"modelValue\", \"account\"])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_10, [\n            _createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t(\"pay.amount\")), 1),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _createVNode(_component_InputGroup, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_InputNumber, {\n                    itemId: \"payamount\",\n                    modelValue: state.amount,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((state.amount) = $event)),\n                    min: 0,\n                    max: state.maxAmount,\n                    step: state.stepAmount,\n                    maxFractionDigits: state.assetData.decimals,\n                    showButtons: \"\",\n                    class: \"w-full\"\n                  }, null, 8, [\"modelValue\", \"max\", \"step\", \"maxFractionDigits\"]),\n                  (state.assetData)\n                    ? (_openBlock(), _createBlock(_component_InputGroupAddon, { key: 0 }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(state.assetData[\"unit-name\"]), 1)\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_Button, {\n                    severity: \"secondary\",\n                    class: \"col-2\",\n                    onClick: setMaxAmount\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t(\"pay.set_max\")), 1)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _cache[7] || (_cache[7] = _createElementVNode(\"label\", { class: \"col-12 mb-2 md:col-2 md:mb-0\" }, null, -1)),\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createVNode(_component_Button, {\n                onClick: deployApp,\n                disabled: state.deploying\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t(\"scheduled_payments.create_escrow_account\")) + \" \", 1),\n                  (state.deploying)\n                    ? (_openBlock(), _createBlock(_component_ProgressSpinner, {\n                        key: 0,\n                        style: {\"width\":\"1em\",\"height\":\"1em\"},\n                        strokeWidth: \"10\",\n                        class: \"ml-2\"\n                      }))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }, 8, [\"disabled\"])\n            ])\n          ]),\n          _createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t(\"scheduled_payments.list_of_payments\")), 1),\n          _createVNode(_component_DataTable, {\n            selection: state.selection,\n            \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event: any) => ((state.selection) = $event)),\n            value: state.apps,\n            \"responsive-layout\": \"scroll\",\n            \"selection-mode\": \"single\",\n            paginator: true,\n            rows: 20,\n            filters: state.filters,\n            \"onUpdate:filters\": _cache[6] || (_cache[6] = ($event: any) => ((state.filters) = $event)),\n            filterDisplay: \"menu\",\n            globalFilterFields: [\n            'appId',\n            'appAddress',\n            'period',\n            'start',\n            'feeBalance',\n            'fee',\n          ]\n          }, {\n            header: _withCtx(() => [\n              (state.filters['global'])\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                    _createElementVNode(\"div\", _hoisted_16, [\n                      _createElementVNode(\"span\", _hoisted_17, [\n                        _cache[8] || (_cache[8] = _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1)),\n                        _createVNode(_component_InputText, {\n                          modelValue: state.filters['global'].value,\n                          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((state.filters['global'].value) = $event)),\n                          placeholder: \"Keyword Search\"\n                        }, null, 8, [\"modelValue\"])\n                      ])\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            empty: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$t(\"scheduled_payments.no_payment_found\")), 1)\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_Column, {\n                field: \"appId\",\n                header: _ctx.$t('scheduled_payments.app_id'),\n                sortable: true\n              }, null, 8, [\"header\"]),\n              _createVNode(_component_Column, {\n                field: \"appAddress\",\n                header: _ctx.$t('scheduled_payments.app_address'),\n                sortable: true\n              }, {\n                body: _withCtx((slotProps) => [\n                  (slotProps.data.appAddress)\n                    ? (_openBlock(), _createBlock(AlgorandAddress, {\n                        key: 0,\n                        address: slotProps.data.appAddress\n                      }, null, 8, [\"address\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }, 8, [\"header\"]),\n              _createVNode(_component_Column, {\n                field: \"period\",\n                header: _ctx.$t('scheduled_payments.period'),\n                sortable: true\n              }, null, 8, [\"header\"]),\n              _createVNode(_component_Column, {\n                field: \"start\",\n                header: _ctx.$t('scheduled_payments.start'),\n                sortable: true\n              }, {\n                body: _withCtx((slotProps) => [\n                  _createTextVNode(_toDisplayString(new Date(slotProps.data.start * 1000).toLocaleDateString()), 1)\n                ]),\n                _: 1\n              }, 8, [\"header\"]),\n              _createVNode(_component_Column, {\n                field: \"balanceFee\",\n                header: _ctx.$t('scheduled_payments.fee_balance'),\n                sortable: true\n              }, {\n                body: _withCtx((slotProps) => [\n                  _createTextVNode(_toDisplayString(_unref(formatCurrency)(\n                  slotProps.data.balanceFee,\n                  state.feeAssetData[\"unit-name\"] ?? state.feeAssetData.name,\n                  state.feeAssetData.decimals\n                )), 1)\n                ]),\n                _: 1\n              }, 8, [\"header\"]),\n              _createVNode(_component_Column, {\n                field: \"fee\",\n                header: _ctx.$t('scheduled_payments.execution_fee'),\n                sortable: true\n              }, {\n                body: _withCtx((slotProps) => [\n                  _createTextVNode(_toDisplayString(_unref(formatCurrency)(\n                  slotProps.data.fee,\n                  state.feeAssetData[\"unit-name\"] ?? state.feeAssetData.name,\n                  state.feeAssetData.decimals\n                )), 1)\n                ]),\n                _: 1\n              }, 8, [\"header\"])\n            ]),\n            _: 1\n          }, 8, [\"selection\", \"value\", \"filters\"]),\n          _createElementVNode(\"p\", null, [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"scheduled_payments.xgov_promo\")) + \" - \", 1),\n            _cache[9] || (_cache[9] = _createElementVNode(\"a\", {\n              href: \"https://github.com/algorandfoundation/xGov/blob/main/Proposals/xgov-90.md\",\n              target: \"_blank\"\n            }, \"xGov#90\", -1)),\n            _cache[10] || (_cache[10] = _createTextVNode(\". \"))\n          ])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport MainLayout from \"../../layouts/Main.vue\";\nimport { useStore } from \"vuex\";\nimport { onMounted, reactive, watch } from \"vue\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport SelectAccount from \"../../components/SelectAccount.vue\";\nimport SelectAsset from \"../../components/SelectAsset.vue\";\nimport DropDown from \"primevue/dropdown\";\nimport CAsset from \"@/scripts/interface/CAsset\";\nimport base642base64url from \"@/scripts/encoding/base642base64url\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport AlgorandAddress from \"@/components/AlgorandAddress.vue\";\nimport formatCurrency from \"@/scripts/numbers/formatCurrency\";\n\nimport YAML from \"yaml\";\nimport {\n  BiatecTaskManagerClient,\n  getPoolManagerApp,\n  getBoxReferenceUser,\n  getBoxReferenceApp,\n  parseBoxData,\n} from \"biatec-scheduler\";\nimport algosdk from \"algosdk\";\nimport axios from \"axios\";\n\nconst route = useRoute();\nconst store = useStore();\nconst router = useRouter();\nconst state = reactive({\n  selection: {},\n  payTo: \"\",\n  assetData: new CAsset(),\n  account: route.params.account as string,\n  amount: 0,\n  maxAmount: 0,\n  stepAmount: 1,\n  apps: [],\n  filters: {\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n  },\n  period: \"86400\",\n  optionsSchedule: [\n    {\n      value: \"60\",\n      name: \"Run each minute\",\n    },\n    {\n      value: \"3600\",\n      name: \"Run each hour\",\n    },\n    {\n      value: \"86400\",\n      name: \"Run each day\",\n    },\n  ],\n  start: Math.round(new Date().getTime() / 1000),\n  txID: \"\",\n  action: \"\",\n  hash: \"\",\n  client: \"\",\n  appId: \"\",\n  fee: 1000,\n  feeAssetId: 0,\n  feeAssetData: new CAsset(),\n  deploying: false,\n});\n\nconst getAccountData = () => {\n  const account = store.state.wallet.privateAccounts.find(\n    (a: any) => a.addr == state.account\n  );\n  if (!account) return false;\n  if (!account.data) return false;\n  return account.data[store.state.config.env];\n};\nconst maxAmount = () => {\n  const accountData = getAccountData();\n  if (!state.assetData) return 0;\n  if (state.assetData.type == \"ARC200\") {\n    if (!state.assetData) return 0;\n    return state.assetData.amount / 10 ** state.assetData.decimals;\n  } else if (state.assetData.type == \"ASA\") {\n    if (!state.assetData) return 0;\n    return state.assetData.amount / 10 ** state.assetData.decimals;\n  } else {\n    let ret = accountData.amount / 1000000 - 0.1;\n    if (accountData[\"assets\"] && accountData[\"assets\"].length > 0)\n      ret = ret - accountData[\"assets\"].length * 0.1;\n    return ret;\n  }\n};\nconst stepAmount = () => {\n  if (!state.assetData.decimals) return 1;\n  const ret = Math.pow(10, -1 * state.assetData.decimals);\n  return ret;\n};\nconst setMaxAmount = () => {\n  state.amount = maxAmount();\n};\nwatch(\n  () => state.assetData,\n  async () => {\n    state.maxAmount = maxAmount();\n    state.stepAmount = stepAmount();\n    await store.dispatch(\"wallet/prolong\");\n  },\n  { deep: true }\n);\n\nconst loadTableData = async () => {\n  try {\n    const algod = (await store.dispatch(\"algod/getAlgod\")) as algosdk.Algodv2;\n    const indexer = (await store.dispatch(\n      \"indexer/getIndexer\"\n    )) as algosdk.Indexer;\n    // var client = new BiatecTaskManagerClient(\n    //   {\n    //     resolveBy: \"id\",\n    //     id: getPoolManagerApp(store.state.config.env),\n    //   },\n    //   algod\n    // );\n    const poolAppId = getPoolManagerApp(store.state.config.env);\n    const poolApp = await algod.getApplicationByID(poolAppId).do();\n    const fa = poolApp.params[\"global-state\"].find((kv) => kv.key == \"ZmE=\")\n      .value.uint;\n    state.feeAssetId = fa;\n    state.feeAssetData = await store.dispatch(\"indexer/getAsset\", {\n      assetIndex: fa,\n    });\n\n    const addr = route.params.account as string;\n    const decodedAddr = algosdk.decodeAddress(addr);\n    const box = await algod\n      .getApplicationBoxByName(\n        poolAppId,\n        getBoxReferenceUser(poolAppId, decodedAddr).name\n      )\n      .do();\n    const apps = [];\n    for (let pos = 2; pos < box.value.length; pos = pos + 8) {\n      const appIdUint = box.value.subarray(pos, pos + 8);\n      const appId = algosdk.decodeUint64(appIdUint, \"safe\");\n      const boxApp = await algod\n        .getApplicationBoxByName(\n          poolAppId,\n          getBoxReferenceApp(poolAppId, appId).name\n        )\n        .do();\n      const data = parseBoxData(boxApp.value);\n\n      const app = await algod.getApplicationByID(appId).do();\n      const s = app.params[\"global-state\"].find((kv) => kv.key == \"cw==\").value\n        .uint;\n      const p = app.params[\"global-state\"].find((kv) => kv.key == \"cA==\").value\n        .uint;\n      apps.push({\n        appId: appId,\n        appAddress: algosdk.getApplicationAddress(appId),\n        start: s,\n        period: p,\n        balanceFee: data.funds,\n        fee: data.fee,\n      });\n    }\n    state.apps = apps;\n\n    // const box = await indexer\n    //   .lookupApplicationBoxByIDandName(\n    //     poolAppId,\n    //     getBoxReferenceUser(poolAppId, decodedAddr).name\n    //   )\n    //   .do();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst deployApp = async () => {\n  try {\n    state.deploying = true;\n    const doc = {\n      schedule: {\n        period: state.period,\n        start: state.start,\n        fee: 1000,\n        app: 0,\n      },\n      tasks: [\n        {\n          task: \"pay@v1\",\n          displayName: `Pay to '${state.payTo}' ${state.amount} of token ${state.assetData[\"asset-id\"]}`,\n          inputs: {\n            receiver: `'${state.payTo}'`,\n            amount: Math.round(state.amount * 10 ** state.assetData.decimals),\n            token: state.assetData[\"asset-id\"],\n          },\n        },\n      ],\n    };\n    const docYaml = YAML.stringify(doc);\n    const postRet = await axios.post(\n      \"https://api-scheduler.biatec.io/v1/build/0\",\n      docYaml,\n      {\n        headers: {\n          \"Content-Type\": \"application/yaml\",\n        },\n      }\n    );\n\n    if (postRet.data.status !== \"success\") {\n      throw Error(\"Build has failed\");\n    }\n    state.hash = postRet.data.hash;\n    state.client = postRet.data.client;\n\n    const txsRequest = await axios.get(\n      `https://api-scheduler.biatec.io/v1/tx-create/${state.hash}/${store.state.config.env}/${route.params.account}/${state.client}`\n    );\n\n    const txs = txsRequest.data.map((t: string) => {\n      return algosdk.decodeUnsignedTransaction(\n        Buffer.from(t, \"base64\")\n      ) as algosdk.Transaction;\n    });\n\n    await store.dispatch(\"signer/returnTo\", \"ScheduledPayments\");\n    await store.dispatch(\"signer/toSign\", { tx: txs[0] });\n    const encoded = base642base64url(\n      Buffer.from(algosdk.encodeUnsignedTransaction(txs[0])).toString(\"base64\")\n    );\n\n    state.deploying = false;\n    state.txID = (txs[0] as algosdk.Transaction).txID();\n    state.action = \"tx-deploy\";\n    localStorage.setItem(\"currentAction\", JSON.stringify(state));\n    router.push(`/sign/${route.params.account}/${encoded}`);\n  } catch (e) {\n    state.deploying = false;\n    console.error(e);\n  }\n};\n\nconst continueTxDeploy = async () => {\n  try {\n    const algod = (await store.dispatch(\"algod/getAlgod\")) as algosdk.Algodv2;\n    const info = await algosdk.waitForConfirmation(algod, state.txID, 1);\n    state.appId = info[\"application-index\"];\n\n    const txsRequest = await axios.post(\n      `https://api-scheduler.biatec.io/v1/tx/${state.hash}/${store.state.config.env}/${route.params.account}/${state.appId}/bootstrap/${state.client}`,\n      {\n        period: Number(state.period),\n        start: Number(state.start),\n        fee: Number(state.fee),\n      }\n    );\n\n    state.action = \"tx-configure\";\n    localStorage.setItem(\"currentAction\", JSON.stringify(state));\n\n    const txs = txsRequest.data.map((t: string) => {\n      return algosdk.decodeUnsignedTransaction(\n        Buffer.from(t, \"base64\")\n      ) as algosdk.Transaction;\n    });\n\n    await store.dispatch(\"signer/returnToSignAll\", \"ScheduledPayments\");\n    await store.dispatch(\"signer/toSignArray\", { txs: txs });\n\n    await router.push(\"/signAll\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nonMounted(async () => {\n  await store.dispatch(\"wallet/prolong\");\n  await loadTableData();\n  try {\n    const deserialized = JSON.parse(\n      localStorage.getItem(\"currentAction\") ?? \"\"\n    );\n    if (deserialized.selection) {\n      state.selection = deserialized.selection;\n    }\n    if (deserialized.payTo) {\n      state.payTo = deserialized.payTo;\n    }\n    if (deserialized.assetData) {\n      var newAssetData = new CAsset();\n      newAssetData.amount = deserialized.assetData.amount;\n      newAssetData[\"asset-id\"] = deserialized.assetData[\"asset-id\"];\n      newAssetData.decimals = deserialized.assetData.decimals;\n      newAssetData.label = deserialized.assetData.label;\n      newAssetData.name = deserialized.assetData.name;\n      newAssetData.type = deserialized.assetData.type;\n      newAssetData[\"unit-name\"] = deserialized.assetData[\"unit-name\"];\n      state.assetData = newAssetData;\n    }\n    if (deserialized.account) {\n      state.account = deserialized.account;\n    }\n    if (deserialized.amount) {\n      state.amount = deserialized.amount;\n    }\n    if (deserialized.period) {\n      state.period = deserialized.period;\n    }\n    if (deserialized.txID) {\n      state.txID = deserialized.txID;\n    }\n    if (deserialized.action) {\n      state.action = deserialized.action;\n    }\n    if (deserialized.hash) {\n      state.hash = deserialized.hash;\n    }\n    if (deserialized.client) {\n      state.client = deserialized.client;\n    }\n    if (deserialized.start) {\n      state.start = deserialized.start;\n    }\n    if (deserialized.fee) {\n      state.fee = deserialized.fee;\n    }\n  } catch (exc: any) {\n    console.error(exc.message ?? exc);\n  }\n\n  if (state.action === \"tx-deploy\") {\n    continueTxDeploy();\n  }\n});\nwatch(\n  () => state.selection,\n  () => {\n    router.push({\n      name: \"scheduled-payment-with-appid\",\n      params: {\n        account: route.params.account,\n        appId: state.selection.appId,\n      },\n    });\n  }\n);\n</script>\n<template>\n  <MainLayout>\n    <h1>{{ $t(\"scheduled_payments.title\") }}</h1>\n\n    <Card>\n      <template #content>\n        <p>\n          {{ $t(\"scheduled_payments.description\") }}\n        </p>\n        <h2>{{ $t(\"scheduled_payments.new_scheduled_payment\") }}</h2>\n        <div class=\"field grid\">\n          <label class=\"col-12 mb-2 md:col-2 md:mb-0\">\n            {{ $t(\"scheduled_payments.period\") }}\n          </label>\n          <div class=\"col-12 md:col-10\">\n            <DropDown\n              v-model=\"state.period\"\n              option-label=\"name\"\n              option-value=\"value\"\n              :options=\"state.optionsSchedule\"\n              class=\"w-full\"\n            >\n            </DropDown>\n          </div>\n        </div>\n        <div class=\"field grid\">\n          <label class=\"col-12 mb-2 md:col-2 md:mb-0\">\n            {{ $t(\"scheduled_payments.pay_to\") }}\n          </label>\n          <div class=\"col-12 md:col-10\">\n            <SelectAccount v-model=\"state.payTo\" class=\"w-full\"></SelectAccount>\n          </div>\n        </div>\n        <div class=\"field grid\">\n          <label class=\"col-12 mb-2 md:col-2 md:mb-0\" for=\"asset\">\n            {{ $t(\"scheduled_payments.send_asset\") }}\n          </label>\n          <div class=\"col-12 md:col-10\">\n            <SelectAsset\n              itemId=\"asset\"\n              v-model=\"state.assetData\"\n              class=\"w-full\"\n              :account=\"state.account\"\n            ></SelectAsset>\n          </div>\n        </div>\n        <div class=\"field grid\">\n          <label for=\"payamount\" class=\"col-12 mb-2 md:col-2 md:mb-0\">\n            {{ $t(\"pay.amount\") }}\n          </label>\n          <div class=\"col-12 md:col-10\">\n            <InputGroup>\n              <InputNumber\n                itemId=\"payamount\"\n                v-model=\"state.amount\"\n                :min=\"0\"\n                :max=\"state.maxAmount\"\n                :step=\"state.stepAmount\"\n                :maxFractionDigits=\"state.assetData.decimals\"\n                showButtons\n                class=\"w-full\"\n              />\n              <InputGroupAddon v-if=\"state.assetData\">\n                {{ state.assetData[\"unit-name\"] }}\n              </InputGroupAddon>\n              <Button severity=\"secondary\" class=\"col-2\" @click=\"setMaxAmount\">\n                {{ $t(\"pay.set_max\") }}\n              </Button>\n            </InputGroup>\n          </div>\n        </div>\n        <div class=\"field grid\">\n          <label class=\"col-12 mb-2 md:col-2 md:mb-0\"> </label>\n          <div class=\"col-12 md:col-10\">\n            <Button @click=\"deployApp\" :disabled=\"state.deploying\">\n              {{ $t(\"scheduled_payments.create_escrow_account\") }}\n              <ProgressSpinner\n                v-if=\"state.deploying\"\n                style=\"width: 1em; height: 1em\"\n                strokeWidth=\"10\"\n                class=\"ml-2\"\n              />\n            </Button>\n          </div>\n        </div>\n        <h2>{{ $t(\"scheduled_payments.list_of_payments\") }}</h2>\n        <DataTable\n          v-model:selection=\"state.selection\"\n          :value=\"state.apps\"\n          responsive-layout=\"scroll\"\n          selection-mode=\"single\"\n          :paginator=\"true\"\n          :rows=\"20\"\n          v-model:filters=\"state.filters\"\n          filterDisplay=\"menu\"\n          :globalFilterFields=\"[\n            'appId',\n            'appAddress',\n            'period',\n            'start',\n            'feeBalance',\n            'fee',\n          ]\"\n        >\n          <template #header>\n            <div class=\"grid\" v-if=\"state.filters['global']\">\n              <div class=\"col\">\n                <span class=\"p-input-icon-left\">\n                  <i class=\"pi pi-search\" />\n                  <InputText\n                    v-model=\"state.filters['global'].value\"\n                    placeholder=\"Keyword Search\"\n                  />\n                </span>\n              </div>\n            </div>\n          </template>\n          <template #empty>\n            {{ $t(\"scheduled_payments.no_payment_found\") }}</template\n          >\n          <Column\n            field=\"appId\"\n            :header=\"$t('scheduled_payments.app_id')\"\n            :sortable=\"true\"\n          />\n          <Column\n            field=\"appAddress\"\n            :header=\"$t('scheduled_payments.app_address')\"\n            :sortable=\"true\"\n          >\n            <template #body=\"slotProps\">\n              <AlgorandAddress\n                v-if=\"slotProps.data.appAddress\"\n                :address=\"slotProps.data.appAddress\"\n              ></AlgorandAddress>\n            </template>\n          </Column>\n          <Column\n            field=\"period\"\n            :header=\"$t('scheduled_payments.period')\"\n            :sortable=\"true\"\n          />\n          <Column\n            field=\"start\"\n            :header=\"$t('scheduled_payments.start')\"\n            :sortable=\"true\"\n          >\n            <template #body=\"slotProps\">\n              {{ new Date(slotProps.data.start * 1000).toLocaleDateString() }}\n            </template>\n          </Column>\n          <Column\n            field=\"balanceFee\"\n            :header=\"$t('scheduled_payments.fee_balance')\"\n            :sortable=\"true\"\n          >\n            <template #body=\"slotProps\">\n              {{\n                formatCurrency(\n                  slotProps.data.balanceFee,\n                  state.feeAssetData[\"unit-name\"] ?? state.feeAssetData.name,\n                  state.feeAssetData.decimals\n                )\n              }}\n            </template>\n          </Column>\n          <Column\n            field=\"fee\"\n            :header=\"$t('scheduled_payments.execution_fee')\"\n            :sortable=\"true\"\n          >\n            <template #body=\"slotProps\">\n              {{\n                formatCurrency(\n                  slotProps.data.fee,\n                  state.feeAssetData[\"unit-name\"] ?? state.feeAssetData.name,\n                  state.feeAssetData.decimals\n                )\n              }}\n            </template>\n          </Column>\n        </DataTable>\n        <p>\n          {{ $t(\"scheduled_payments.xgov_promo\") }}\n          -\n          <a\n            href=\"https://github.com/algorandfoundation/xGov/blob/main/Proposals/xgov-90.md\"\n            target=\"_blank\"\n            >xGov#90</a\n          >.\n        </p>\n      </template>\n    </Card>\n  </MainLayout>\n</template>\n","import script from \"./ScheduledPayments.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ScheduledPayments.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_defineComponent","__name","props","modelValue","CAsset","itemId","String","class","account","emits","setup","__props","emit","__emit","store","computed","get","set","value","useStore","t","useI18n","state","reactive","assetId","assets","accountData","watch","newAssetId","find","a","Number","ret","amount","decimals","label","name","type","makeAccountData","wallet","privateAccounts","addr","data","config","env","makeAssets","async","balance","formatCurrency","tokenSymbol","push","index","asset","dispatch","assetIndex","console","error","arc200","accountAsset","Object","values","symbol","arc200id","onMounted","_ctx","_cache","_openBlock","_createBlock","_unref","Dropdown","inputId","itemid","$event","filter","options","optionLabel","optionValue","placeholder","$t","inputClass","__exports__","ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","cd","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","escapeTagName","tn","replace","ch","Directives","constructor","yaml","tags","this","docStart","docEnd","defaultYaml","defaultTags","clone","copy","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","shift","handle","prefix","isValid","test","tagName","source","verbatim","slice","suffix","match","decodeURIComponent","tagString","tag","entries","startsWith","substring","toString","doc","lines","tagEntries","tagNames","_key","keys","some","join","anchorIsValid","sa","JSON","stringify","msg","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","createNodeAnchors","aliasObjects","sourceObjects","prevAnchors","onAnchor","setAnchors","ref","applyReviver","reviver","obj","val","Array","isArray","len","v0","v1","undefined","k","from","delete","call","toJS","arg","ctx","map","v","toJSON","aliasCount","count","onCreate","keep","NodeBase","defineProperty","create","getPrototypeOf","getOwnPropertyDescriptors","range","mapAsMap","maxAliasCount","TypeError","mapKeyWarned","super","resolve","found","_arg","ReferenceError","getAliasCount","_onComment","_onChompKeep","src","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","defaultTagPrefix","findTagObject","tagObj","format","identify","createNode","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","iterator","nodeClass","default","collectionFromPath","isInteger","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","start","getFoldOptions","isBlock","containsDocumentMarker","lineLengthOverLimit","indentLength","limit","strLen","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","RegExp","blockString","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","indentSize","header","body","plainString","actualString","indentStep","inFlow","compat","stringifyString","ss","_stringify","_type","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","getTagObject","testMatch","stringifyProps","resolvedAliases","o","stringifyPair","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","cs","vs0","nl0","hasNewline","hasPropsLine","sp0","warn","logLevel","warning","process","emitWarning","MERGE_KEY","merge","description","addToJSMap","addMergeToJSMap","isMergeKey","mergeValue","srcMap","prototype","hasOwnProperty","addPairToJSMap","jsKey","stringKey","stringifyKey","jsValue","strCtx","inStringifyKey","strKey","jsonStr","createPair","_","pair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","fcPadding","reqNewline","linesAtValue","iv","reduce","sum","ic","trimStart","findPair","YAMLMap","replacer","sortMapEntries","sort","overwrite","_pair","sortEntries","findIndex","del","Type","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","sv","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","intHex","stringifyJSON","jsonScalars","jsonError","binary","Uint8Array","Buffer","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","boolObj","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","padStart","intTime","floatTime","timestamp","Date","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","tagsByName","bool","float","int","null","coreKnownTags","getTags","customTags","schemaName","addMergeTag","schemaTags","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","stringifyDocument","hasDirectives","dir","contentComment","dc","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","stringKeys","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","jsonArg","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","parentIndent","startOnNewline","atNewline","hasSpace","commentSep","reqSpace","tab","newlineAfterProp","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","bm","NodeClass","atRoot","commentEnd","collItem","keyProps","atKey","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockSeq","bs","resolveEnd","blockMsg","resolveFlowCollection","fcName","coll","prevItemComment","loop","endRange","expectedEnd","ce","ee","cePos","toUpperCase","resolveCollection","CN","Coll","composeCollection","tagToken","nl","lastProp","expType","kt","resolveBlockScalar","scalar","parseBlockScalarHeader","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","ts","first","m","line0","resolveFlowScalar","rel","plainValue","singleQuotedValue","doubleQuotedValue","valueEnd","re","badChar","foldLines","exec","lastIndex","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","e","r","N","L","P","ok","fromCodePoint","composeScalar","findScalarTagByName","findScalarTagByTest","matchWithTest","emptyScalarPosition","before","isSrcToken","composeAlias","alias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","forceDoc","endOffset","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","cst","stringifyToken","stringifyItem","_visit","field","itemAtPath","parentCollection","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","flowIndicatorChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","atFlowEndMarker","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atMapIndent","atNextItem","fs","flowScalar","parseOptions","lineCounter","parseAllDocuments","parser","composer","docs","forEach","empty","_doc","_reviver","round","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","route","useRoute","router","useRouter","selection","payTo","assetData","params","maxAmount","stepAmount","apps","filters","global","matchMode","FilterMatchMode","CONTAINS","period","optionsSchedule","getTime","txID","action","hash","client","appId","fee","feeAssetId","feeAssetData","deploying","getAccountData","pow","setMaxAmount","deep","loadTableData","algod","poolAppId","getPoolManagerApp","poolApp","getApplicationByID","do","fa","kv","uint","decodedAddr","algosdk","box","getApplicationBoxByName","getBoxReferenceUser","appIdUint","subarray","boxApp","getBoxReferenceApp","parseBoxData","app","appAddress","balanceFee","funds","deployApp","schedule","tasks","task","displayName","inputs","receiver","docYaml","YAML","postRet","axios","post","headers","status","txsRequest","txs","tx","encoded","base642base64url","localStorage","setItem","continueTxDeploy","info","deserialized","getItem","newAssetData","exc","_component_InputNumber","_resolveComponent","_component_InputGroupAddon","_component_Button","_component_InputGroup","_component_ProgressSpinner","_component_InputText","_component_Column","_component_DataTable","_component_Card","MainLayout","_withCtx","_createElementVNode","_toDisplayString","_createVNode","DropDown","SelectAccount","SelectAsset","maxFractionDigits","showButtons","_createTextVNode","_createCommentVNode","severity","onClick","disabled","style","strokeWidth","paginator","rows","filterDisplay","globalFilterFields","_createElementBlock","sortable","slotProps","AlgorandAddress","address","toLocaleDateString","href","target"],"sourceRoot":""}